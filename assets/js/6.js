(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[6],{

/***/ "./node_modules/primevue/tooltip/tooltip.esm.js":
/*!******************************************************!*\
  !*** ./node_modules/primevue/tooltip/tooltip.esm.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var primevue_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! primevue/utils */ \"./node_modules/primevue/utils/utils.esm.js\");\n\n\nfunction bindEvents(el) {\n    const modifiers = el.$_ptooltipModifiers;\n    if (modifiers.focus) {\n        el.addEventListener('focus', onFocus);\n        el.addEventListener('blur', onBlur);\n    }\n    else {\n        el.addEventListener('mouseenter', onMouseEnter);\n        el.addEventListener('mouseleave', onMouseLeave);\n        el.addEventListener('click', onClick);\n    }\n}\n\nfunction unbindEvents(el) {\n    const modifiers = el.$_ptooltipModifiers;\n    if (modifiers.focus) {\n        el.removeEventListener('focus', onFocus);\n        el.removeEventListener('blur', onBlur);\n    }\n    else {\n        el.removeEventListener('mouseenter', onMouseEnter);\n        el.removeEventListener('mouseleave', onMouseLeave);\n        el.removeEventListener('click', onClick);\n    }\n}\n\nfunction bindScrollListener(el) {\n    if (!el.$_ptooltipScrollHandler) {\n        el.$_ptooltipScrollHandler = new primevue_utils__WEBPACK_IMPORTED_MODULE_0__[\"ConnectedOverlayScrollHandler\"](el, function() {\n            hide(el);\n        });\n    }\n\n    el.$_ptooltipScrollHandler.bindScrollListener();\n}\n\nfunction unbindScrollListener(el) {\n    if (el.$_ptooltipScrollHandler) {\n        el.$_ptooltipScrollHandler.unbindScrollListener();\n    }\n}\n\nfunction onMouseEnter(event) {\n    show(event.currentTarget);\n}\n\nfunction onMouseLeave(event) {\n    hide(event.currentTarget);\n}\n\nfunction onFocus(event) {\n    show(event.currentTarget);\n}\n\nfunction onBlur(event) {\n    hide(event.currentTarget);\n}\n\nfunction onClick(event) {\n    hide(event.currentTarget);\n}\n\nfunction show(el) {\n    if (el.$_ptooltipDisabled) {\n        return;\n    }\n\n    let tooltipElement = create(el);\n    align(el);\n    primevue_utils__WEBPACK_IMPORTED_MODULE_0__[\"DomHandler\"].fadeIn(tooltipElement, 250);\n\n    window.addEventListener('resize', function onWindowResize() {\n        if (!primevue_utils__WEBPACK_IMPORTED_MODULE_0__[\"DomHandler\"].isAndroid()) {\n            hide(el);\n        }\n        this.removeEventListener('resize', onWindowResize);\n    });\n\n    bindScrollListener(el);\n    primevue_utils__WEBPACK_IMPORTED_MODULE_0__[\"ZIndexUtils\"].set('tooltip', tooltipElement, el.$_ptooltipZIndex);\n}\n\nfunction hide(el) {\n    remove(el);\n    unbindScrollListener(el);\n    primevue_utils__WEBPACK_IMPORTED_MODULE_0__[\"ZIndexUtils\"].clear(el);\n}\n\nfunction getTooltipElement(el) {\n    return document.getElementById(el.$_ptooltipId);\n}\n\nfunction create(el) {\n    const id = Object(primevue_utils__WEBPACK_IMPORTED_MODULE_0__[\"UniqueComponentId\"])() + '_tooltip';\n    el.$_ptooltipId = id;\n\n    let container = document.createElement('div');\n    container.id = id;\n\n    let tooltipArrow = document.createElement('div');\n    tooltipArrow.className = 'p-tooltip-arrow';\n    container.appendChild(tooltipArrow);\n\n    let tooltipText = document.createElement('div');\n    tooltipText.className = 'p-tooltip-text';\n    tooltipText.innerHTML = el.$_ptooltipValue;\n\n    container.appendChild(tooltipText);\n    document.body.appendChild(container);\n\n    container.style.display = 'inline-block';\n\n    return container;\n}\n\nfunction remove(el) {\n    if (el) {\n        let tooltipElement = getTooltipElement(el);\n        if (tooltipElement && tooltipElement.parentElement) {\n            document.body.removeChild(tooltipElement);\n        }\n        el.$_ptooltipId = null;\n    }\n}\n\nfunction align(el) {\n    const modifiers = el.$_ptooltipModifiers;\n\n    if (modifiers.top) {\n        alignTop(el);\n        if (isOutOfBounds(el)) {\n            alignBottom(el);\n        }\n    }\n    else if (modifiers.left) {\n        alignLeft(el);\n        if (isOutOfBounds(el)) {\n            alignRight(el);\n\n            if (isOutOfBounds(el)) {\n                alignTop(el);\n\n                if (isOutOfBounds(el)) {\n                    alignBottom(el);\n                }\n            }\n        }\n    }\n    else if (modifiers.bottom) {\n        alignBottom(el);\n        if (isOutOfBounds(el)) {\n            alignTop(el);\n        }\n    }\n    else {\n        alignRight(el);\n        if (isOutOfBounds(el)) {\n            alignLeft(el);\n\n            if (isOutOfBounds(el)) {\n                alignTop(el);\n\n                if (isOutOfBounds(el)) {\n                    alignBottom(el);\n                }\n            }\n        }\n    }\n}\n\nfunction getHostOffset(el) {\n    let offset = el.getBoundingClientRect();\n    let targetLeft = offset.left + primevue_utils__WEBPACK_IMPORTED_MODULE_0__[\"DomHandler\"].getWindowScrollLeft();\n    let targetTop = offset.top + primevue_utils__WEBPACK_IMPORTED_MODULE_0__[\"DomHandler\"].getWindowScrollTop();\n\n    return {left: targetLeft, top: targetTop};\n}\n\nfunction alignRight(el) {\n    preAlign(el, 'right');\n    let tooltipElement = getTooltipElement(el);\n    let hostOffset = getHostOffset(el);\n    let left = hostOffset.left + primevue_utils__WEBPACK_IMPORTED_MODULE_0__[\"DomHandler\"].getOuterWidth(el);\n    let top = hostOffset.top + (primevue_utils__WEBPACK_IMPORTED_MODULE_0__[\"DomHandler\"].getOuterHeight(el) - primevue_utils__WEBPACK_IMPORTED_MODULE_0__[\"DomHandler\"].getOuterHeight(tooltipElement)) / 2;\n    tooltipElement.style.left = left + 'px';\n    tooltipElement.style.top = top + 'px';\n}\n\nfunction alignLeft(el) {\n    preAlign(el, 'left');\n    let tooltipElement = getTooltipElement(el);\n    let hostOffset = getHostOffset(el);\n    let left = hostOffset.left - primevue_utils__WEBPACK_IMPORTED_MODULE_0__[\"DomHandler\"].getOuterWidth(tooltipElement);\n    let top = hostOffset.top + (primevue_utils__WEBPACK_IMPORTED_MODULE_0__[\"DomHandler\"].getOuterHeight(el) - primevue_utils__WEBPACK_IMPORTED_MODULE_0__[\"DomHandler\"].getOuterHeight(tooltipElement)) / 2;\n    tooltipElement.style.left = left + 'px';\n    tooltipElement.style.top = top + 'px';\n}\n\nfunction alignTop(el) {\n    preAlign(el, 'top');\n    let tooltipElement = getTooltipElement(el);\n    let hostOffset = getHostOffset(el);\n    let left = hostOffset.left + (primevue_utils__WEBPACK_IMPORTED_MODULE_0__[\"DomHandler\"].getOuterWidth(el) - primevue_utils__WEBPACK_IMPORTED_MODULE_0__[\"DomHandler\"].getOuterWidth(tooltipElement)) / 2;\n    let top = hostOffset.top - primevue_utils__WEBPACK_IMPORTED_MODULE_0__[\"DomHandler\"].getOuterHeight(tooltipElement);\n    tooltipElement.style.left = left + 'px';\n    tooltipElement.style.top = top + 'px';\n}\n\nfunction alignBottom(el) {\n    preAlign(el, 'bottom');\n    let tooltipElement = getTooltipElement(el);\n    let hostOffset = getHostOffset(el);\n    let left = hostOffset.left + (primevue_utils__WEBPACK_IMPORTED_MODULE_0__[\"DomHandler\"].getOuterWidth(el) - primevue_utils__WEBPACK_IMPORTED_MODULE_0__[\"DomHandler\"].getOuterWidth(tooltipElement)) / 2;\n    let top = hostOffset.top + primevue_utils__WEBPACK_IMPORTED_MODULE_0__[\"DomHandler\"].getOuterHeight(el);\n    tooltipElement.style.left = left + 'px';\n    tooltipElement.style.top = top + 'px';\n}\n\nfunction preAlign(el, position) {\n    let tooltipElement = getTooltipElement(el);\n    tooltipElement.style.left = -999 + 'px';\n    tooltipElement.style.top = -999 + 'px';\n    tooltipElement.className = 'p-tooltip p-component p-tooltip-' + position;\n}\n\nfunction isOutOfBounds(el) {\n    let tooltipElement = getTooltipElement(el);\n    let offset = tooltipElement.getBoundingClientRect();\n    let targetTop = offset.top;\n    let targetLeft = offset.left;\n    let width = primevue_utils__WEBPACK_IMPORTED_MODULE_0__[\"DomHandler\"].getOuterWidth(tooltipElement);\n    let height = primevue_utils__WEBPACK_IMPORTED_MODULE_0__[\"DomHandler\"].getOuterHeight(tooltipElement);\n    let viewport = primevue_utils__WEBPACK_IMPORTED_MODULE_0__[\"DomHandler\"].getViewport();\n\n    return (targetLeft + width > viewport.width) || (targetLeft < 0) || (targetTop < 0) || (targetTop + height > viewport.height);\n}\n\nfunction getTarget(el) {\n    return primevue_utils__WEBPACK_IMPORTED_MODULE_0__[\"DomHandler\"].hasClass(el, 'p-inputwrapper') ? primevue_utils__WEBPACK_IMPORTED_MODULE_0__[\"DomHandler\"].findSingle(el, 'input'): el;\n}\n\nconst Tooltip = {\n    beforeMount(el, options) {\n        let target = getTarget(el);\n        target.$_ptooltipModifiers = options.modifiers;\n        if (typeof options.value === 'string') {\n            target.$_ptooltipValue = options.value;\n            target.$_ptooltipDisabled = false;\n        }\n        else {\n            target.$_ptooltipValue = options.value.value;\n            target.$_ptooltipDisabled = options.value.disabled || false;\n        }\n\n        target.$_ptooltipZIndex = options.instance.$primevue && options.instance.$primevue.config && options.instance.$primevue.config.zIndex.tooltip;\n        bindEvents(target);\n    },\n    unmounted(el) {\n        let target = getTarget(el);\n        remove(target);\n        unbindEvents(target);\n\n        if (target.$_ptooltipScrollHandler) {\n            target.$_ptooltipScrollHandler.destroy();\n            target.$_ptooltipScrollHandler = null;\n        }\n\n        primevue_utils__WEBPACK_IMPORTED_MODULE_0__[\"ZIndexUtils\"].clear(el);\n    },\n    updated(el, options) {\n        let target = getTarget(el);\n        target.$_ptooltipModifiers = options.modifiers;\n\n        if (typeof options.value === 'string') {\n            target.$_ptooltipValue = options.value;\n            target.$_ptooltipDisabled = false;\n        }\n        else {\n            target.$_ptooltipValue = options.value.value;\n            target.$_ptooltipDisabled = options.value.disabled;\n        }\n    },\n\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Tooltip);\n\n\n//# sourceURL=webpack:///./node_modules/primevue/tooltip/tooltip.esm.js?");

/***/ }),

/***/ "./src/util/assetsUtils.ts":
/*!*********************************!*\
  !*** ./src/util/assetsUtils.ts ***!
  \*********************************/
/*! exports provided: AssetsUtils */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AssetsUtils\", function() { return AssetsUtils; });\n/* harmony import */ var tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tsjs-xpx-chain-sdk */ \"./node_modules/tsjs-xpx-chain-sdk/dist/index.js\");\n/* harmony import */ var tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _state_walletState__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../state/walletState */ \"./src/state/walletState.ts\");\n/* harmony import */ var _state_networkState__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../state/networkState */ \"./src/state/networkState.ts\");\n/* harmony import */ var _util_chainUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/chainUtils */ \"./src/util/chainUtils.ts\");\n/* harmony import */ var _util_walletUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/walletUtils */ \"./src/util/walletUtils.ts\");\n/* harmony import */ var _models_REST_chainAPICall__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../models/REST/chainAPICall */ \"./src/models/REST/chainAPICall.ts\");\n/* harmony import */ var _util_buildTransactions__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/buildTransactions */ \"./src/util/buildTransactions.ts\");\n/* harmony import */ var _state_listenerState__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @/state/listenerState */ \"./src/state/listenerState.ts\");\n/* harmony import */ var _state_utils_listenerStateUtils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @/state/utils/listenerStateUtils */ \"./src/state/utils/listenerStateUtils.ts\");\n/* harmony import */ var _typeHelper__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./typeHelper */ \"./src/util/typeHelper.ts\");\n/* harmony import */ var _models_stores_chainProfileConfig__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @/models/stores/chainProfileConfig */ \"./src/models/stores/chainProfileConfig.ts\");\n\n// import { mergeMap, timeout, filter, map, first, skip } from 'rxjs/operators';\n\n\n\n\n\n\n\n\n\n\nvar AssetsUtils = /** @class */ (function () {\n    function AssetsUtils() {\n    }\n    AssetsUtils.getCosignerList = function (address) {\n        var account = _state_walletState__WEBPACK_IMPORTED_MODULE_1__[\"walletState\"].currentLoggedInWallet.accounts.find(function (account) { return account.address == address; });\n        var other = _state_walletState__WEBPACK_IMPORTED_MODULE_1__[\"walletState\"].currentLoggedInWallet.others.find(function (account) { return account.address == address; });\n        var multiSig = account ? account.getDirectParentMultisig() : [];\n        var multiSigOther = other ? other.getDirectParentMultisig() : [];\n        if (multiSig.length > 0 || multiSigOther.length > 0) {\n            var cosigner = _state_walletState__WEBPACK_IMPORTED_MODULE_1__[\"walletState\"].currentLoggedInWallet.accounts.filter(function (account) {\n                if (multiSig.indexOf(account.publicKey) >= 0 || multiSigOther.indexOf(account.publicKey) >= 0) {\n                    return true;\n                }\n            });\n            var cosignList_1 = [];\n            if (cosigner.length > 0) {\n                cosigner.forEach(function (cosign) {\n                    cosignList_1.push({\n                        name: cosign.name,\n                        address: cosign.address,\n                        balance: cosign.balance,\n                    });\n                });\n            }\n            return { list: cosignList_1 };\n        }\n        else {\n            return { list: [] };\n        }\n    };\n    /**\n     * Method to add leading zeros\n     *\n     * @param cant Quantity of zeros to add\n     * @param amount Amount to add zeros\n     */\n    AssetsUtils.addZeros = function (cant, amount) {\n        if (amount === void 0) { amount = 0; }\n        var realAmount;\n        if (cant > 0) {\n            var decimal = void 0;\n            if (amount === 0) {\n                decimal = this.addDecimals(cant);\n                realAmount = \"0\" + decimal;\n            }\n            else {\n                var arrAmount = amount.toString().replace(/,/g, '').split('.');\n                if (arrAmount.length < 2) {\n                    decimal = this.addDecimals(cant);\n                }\n                else {\n                    var arrDecimals = arrAmount[1].split('');\n                    decimal = this.addDecimals(cant - arrDecimals.length, arrAmount[1]);\n                }\n                realAmount = \"\" + arrAmount[0] + decimal;\n            }\n        }\n        else {\n            realAmount = amount;\n        }\n        return realAmount;\n    };\n    /**\n     * Method to add leading zeros\n     *\n     * @param cant Quantity of zeros to add\n     * @param amount Amount to add zeros\n     */\n    AssetsUtils.addDecimals = function (cant, amount) {\n        if (amount === void 0) { amount = '0'; }\n        var x = '0';\n        if (amount === '0') {\n            for (var index = 0; index < cant - 1; index++) {\n                amount += x;\n            }\n        }\n        else {\n            for (var index = 0; index < cant; index++) {\n                amount += x;\n            }\n        }\n        return amount;\n    };\n    AssetsUtils.createAssetTransaction = function (networkType, generationHash, owner, supply, supplyMutable, transferable, divisibility, duration, changeType) {\n        var buildTransactions = new _util_buildTransactions__WEBPACK_IMPORTED_MODULE_6__[\"BuildTransactions\"](networkType, generationHash);\n        var assetDefinition = buildTransactions.mosaicDefinition(owner, supplyMutable, transferable, divisibility, tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_0__[\"UInt64\"].fromUint(AssetsUtils.calculateDuration(duration)));\n        var assetDefinitionTx = assetDefinition.toAggregate(owner);\n        var supplyChangeType;\n        supplyChangeType = (changeType == 'increase') ? tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_0__[\"MosaicSupplyType\"].Increase : tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_0__[\"MosaicSupplyType\"].Decrease;\n        var assetSupplyChangeTx = buildTransactions.buildMosaicSupplyChange(assetDefinition.mosaicId, supplyChangeType, tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_0__[\"UInt64\"].fromUint(AssetsUtils.addZeros(divisibility, supply))).toAggregate(owner);\n        return buildTransactions.aggregateComplete([assetDefinitionTx, assetSupplyChangeTx]);\n    };\n    AssetsUtils.assetSupplyChangeTransaction = function (networkType, generationHash, mosaidStringId, changeType, supply, divisibility) {\n        var buildTransactions = new _util_buildTransactions__WEBPACK_IMPORTED_MODULE_6__[\"BuildTransactions\"](networkType, generationHash);\n        var supplyChangeType;\n        supplyChangeType = (changeType == 'increase') ? tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_0__[\"MosaicSupplyType\"].Increase : tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_0__[\"MosaicSupplyType\"].Decrease;\n        return buildTransactions.buildMosaicSupplyChange(new tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_0__[\"MosaicId\"](mosaidStringId), supplyChangeType, tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_0__[\"UInt64\"].fromUint(AssetsUtils.addZeros(divisibility, supply)));\n    };\n    AssetsUtils.linkAssetToNamespaceTransaction = function (networkType, generationHash, mosaicIdString, namespaceString, linkType) {\n        var buildTransactions = new _util_buildTransactions__WEBPACK_IMPORTED_MODULE_6__[\"BuildTransactions\"](networkType, generationHash);\n        var aliasActionType;\n        aliasActionType = (linkType == 'link') ? tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_0__[\"AliasActionType\"].Link : tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_0__[\"AliasActionType\"].Unlink;\n        return buildTransactions.assetAlias(aliasActionType, new tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_0__[\"NamespaceId\"](namespaceString), new tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_0__[\"MosaicId\"](mosaicIdString));\n    };\n    AssetsUtils.createAssetTransactionFee = function (networkType, generationHash, owner, supply, supplyMutable, transferable, divisibility, duration, changeType) {\n        var createAssetTransaction = AssetsUtils.createAssetTransaction(networkType, generationHash, owner, supply, supplyMutable, transferable, divisibility, duration, changeType);\n        return createAssetTransaction.maxFee.compact();\n    };\n    AssetsUtils.getMosaicSupplyChangeTransactionFee = function (networkType, generationHash, mosaicId, changeType, supply, divisibility) {\n        var mosaicSupplyChangeTx = AssetsUtils.assetSupplyChangeTransaction(networkType, generationHash, mosaicId, changeType, supply, divisibility);\n        return mosaicSupplyChangeTx.maxFee.compact();\n    };\n    AssetsUtils.getLinkAssetToNamespaceTransactionFee = function (networkType, generationHash, mosaicId, namespaceId, linkType) {\n        var linkAssetToNamespaceTx = AssetsUtils.linkAssetToNamespaceTransaction(networkType, generationHash, mosaicId, namespaceId, linkType);\n        return linkAssetToNamespaceTx.maxFee.compact();\n    };\n    AssetsUtils.calculateDuration = function (durationInDay) {\n        var chainConfig = new _models_stores_chainProfileConfig__WEBPACK_IMPORTED_MODULE_10__[\"ChainProfileConfig\"](_state_networkState__WEBPACK_IMPORTED_MODULE_2__[\"networkState\"].chainNetworkName);\n        chainConfig.init();\n        var blockTargetTime = parseInt(chainConfig.blockGenerationTargetTime);\n        var blockTargetTimeByDay = (60 * 60 * 24) / blockTargetTime;\n        // 5760 = 4 * 60 * 24 -> 15sec per block\n        return Math.floor(durationInDay * blockTargetTimeByDay);\n    };\n    AssetsUtils.getOwnedAssets = function (address) {\n        var assetSelection = [];\n        var account = _state_walletState__WEBPACK_IMPORTED_MODULE_1__[\"walletState\"].currentLoggedInWallet.accounts.find(function (account) { return account.address === address; });\n        var other = _state_walletState__WEBPACK_IMPORTED_MODULE_1__[\"walletState\"].currentLoggedInWallet.others.find(function (account) { return account.address === address; });\n        var filterAccountAsset = account ? account.assets.filter(function (asset) { return asset.owner === account.publicKey; }) : [];\n        var filterOtherAsset = other ? other.assets.filter(function (asset) { return asset.owner === other.publicKey; }) : [];\n        if (filterAccountAsset.length > 0) {\n            filterAccountAsset.forEach(function (asset) {\n                assetSelection.push({\n                    label: asset.idHex + ' > ' + _typeHelper__WEBPACK_IMPORTED_MODULE_9__[\"Helper\"].amountFormatterSimple(asset.amount, asset.divisibility),\n                    value: asset.idHex,\n                });\n            });\n        }\n        if (filterOtherAsset.length > 0) {\n            filterOtherAsset.forEach(function (asset) {\n                assetSelection.push({\n                    label: asset.idHex + ' > ' + _typeHelper__WEBPACK_IMPORTED_MODULE_9__[\"Helper\"].amountFormatterSimple(asset.amount, asset.divisibility),\n                    value: asset.idHex,\n                });\n            });\n        }\n        return assetSelection;\n    };\n    AssetsUtils.getOwnedAssetsPermutable = function (address) {\n        var assetSelection = [];\n        var account = _state_walletState__WEBPACK_IMPORTED_MODULE_1__[\"walletState\"].currentLoggedInWallet.accounts.find(function (account) { return account.address === address; });\n        var other = _state_walletState__WEBPACK_IMPORTED_MODULE_1__[\"walletState\"].currentLoggedInWallet.others.find(function (account) { return account.address === address; });\n        var filterAccountAsset = account ? account.assets.filter(function (asset) { return (asset.owner === account.publicKey && asset.supplyMutable === true); }) : [];\n        var filterOtherAsset = other ? other.assets.filter(function (asset) { return (asset.owner === other.publicKey && asset.supplyMutable === true); }) : [];\n        if (filterAccountAsset.length > 0) {\n            filterAccountAsset.forEach(function (asset) {\n                assetSelection.push({\n                    label: asset.idHex + ' > ' + _typeHelper__WEBPACK_IMPORTED_MODULE_9__[\"Helper\"].amountFormatterSimple(asset.amount, asset.divisibility),\n                    value: asset.idHex,\n                });\n            });\n        }\n        if (filterOtherAsset.length > 0) {\n            filterOtherAsset.forEach(function (asset) {\n                assetSelection.push({\n                    label: asset.idHex + ' > ' + _typeHelper__WEBPACK_IMPORTED_MODULE_9__[\"Helper\"].amountFormatterSimple(asset.amount, asset.divisibility),\n                    value: asset.idHex,\n                });\n            });\n        }\n        return assetSelection;\n    };\n    AssetsUtils.getSenderAccount = function (selectedAddress, walletPassword) {\n        var accAddress = tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_0__[\"Address\"].createFromRawAddress(selectedAddress);\n        var accountDetails = _state_walletState__WEBPACK_IMPORTED_MODULE_1__[\"walletState\"].currentLoggedInWallet.accounts.find(function (account) { return account.address == accAddress.plain(); });\n        var encryptedPassword = _util_walletUtils__WEBPACK_IMPORTED_MODULE_4__[\"WalletUtils\"].createPassword(walletPassword);\n        var privateKey = _util_walletUtils__WEBPACK_IMPORTED_MODULE_4__[\"WalletUtils\"].decryptPrivateKey(encryptedPassword, accountDetails.encrypted, accountDetails.iv);\n        var account = tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_0__[\"Account\"].createFromPrivateKey(privateKey, _util_chainUtils__WEBPACK_IMPORTED_MODULE_3__[\"ChainUtils\"].getNetworkType(_state_networkState__WEBPACK_IMPORTED_MODULE_2__[\"networkState\"].currentNetworkProfile.network.type));\n        return account;\n    };\n    AssetsUtils.createAsset = function (selectedAddress, walletPassword, networkType, generationHash, owner, supply, supplyMutable, transferable, divisibility, duration) {\n        var createAssetAggregateTransaction = AssetsUtils.createAssetTransaction(networkType, generationHash, owner, supply, supplyMutable, transferable, divisibility, duration, 'increase');\n        var account = AssetsUtils.getSenderAccount(selectedAddress, walletPassword);\n        var signedTx = account.sign(createAssetAggregateTransaction, _state_networkState__WEBPACK_IMPORTED_MODULE_2__[\"networkState\"].currentNetworkProfile.generationHash);\n        AssetsUtils.annouce(signedTx);\n    };\n    AssetsUtils.createAssetMultiSig = function (selectedAddress, walletPassword, networkType, generationHash, owner, supply, supplyMutable, transferable, divisibility, duration, multiSigAddress) {\n        var buildTransactions = new _util_buildTransactions__WEBPACK_IMPORTED_MODULE_6__[\"BuildTransactions\"](networkType, generationHash);\n        var assetDefinition = buildTransactions.mosaicDefinition(owner, supplyMutable, transferable, divisibility, tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_0__[\"UInt64\"].fromUint(AssetsUtils.calculateDuration(duration)));\n        var assetDefinitionTx = assetDefinition.toAggregate(owner);\n        var supplyChangeType;\n        supplyChangeType = tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_0__[\"MosaicSupplyType\"].Increase;\n        var assetSupplyChangeTx = buildTransactions.buildMosaicSupplyChange(assetDefinition.mosaicId, supplyChangeType, tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_0__[\"UInt64\"].fromUint(AssetsUtils.addZeros(divisibility, supply))).toAggregate(owner);\n        var account = AssetsUtils.getSenderAccount(selectedAddress, walletPassword);\n        var multisSigAccount = _state_walletState__WEBPACK_IMPORTED_MODULE_1__[\"walletState\"].currentLoggedInWallet.accounts.find(function (element) { return element.address === multiSigAddress; });\n        var multisSigOther = _state_walletState__WEBPACK_IMPORTED_MODULE_1__[\"walletState\"].currentLoggedInWallet.others.find(function (element) { return element.address === multiSigAddress; });\n        var multisigPublicKey = multisSigAccount ? multisSigAccount.publicKey : multisSigOther.publicKey;\n        var multisigPublicAccount = tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_0__[\"PublicAccount\"].createFromPublicKey(multisigPublicKey, networkType);\n        var innerTxn = [assetDefinitionTx.toAggregate(multisigPublicAccount), assetSupplyChangeTx.toAggregate(multisigPublicAccount)];\n        var aggregateBondedTx = buildTransactions.aggregateBonded(innerTxn);\n        var aggregateBondedTxSigned = account.sign(aggregateBondedTx, generationHash);\n        var hashLockTx = buildTransactions.hashLock(_typeHelper__WEBPACK_IMPORTED_MODULE_9__[\"Helper\"].createAsset(_state_networkState__WEBPACK_IMPORTED_MODULE_2__[\"networkState\"].currentNetworkProfile.network.currency.assetId, 10000000), _typeHelper__WEBPACK_IMPORTED_MODULE_9__[\"Helper\"].createUint64FromNumber(200), aggregateBondedTxSigned);\n        var signedHashlock = account.sign(hashLockTx, generationHash);\n        AssetsUtils.multiSigAnnouce(aggregateBondedTxSigned, signedHashlock);\n    };\n    AssetsUtils.changeAssetSupply = function (selectedAddress, walletPassword, networkType, generationHash, mosaicId, changeType, supply, divisibility) {\n        var createAssetAggregateTransaction = AssetsUtils.assetSupplyChangeTransaction(networkType, generationHash, mosaicId, changeType, supply, divisibility);\n        var account = AssetsUtils.getSenderAccount(selectedAddress, walletPassword);\n        var signedTx = account.sign(createAssetAggregateTransaction, _state_networkState__WEBPACK_IMPORTED_MODULE_2__[\"networkState\"].currentNetworkProfile.generationHash);\n        AssetsUtils.annouce(signedTx);\n    };\n    AssetsUtils.changeAssetSupplyMultiSig = function (selectedAddress, walletPassword, networkType, generationHash, mosaicId, changeType, supply, divisibility, multiSigAddress) {\n        var buildTransactions = new _util_buildTransactions__WEBPACK_IMPORTED_MODULE_6__[\"BuildTransactions\"](networkType, generationHash);\n        var createAssetAggregateTransaction = AssetsUtils.assetSupplyChangeTransaction(networkType, generationHash, mosaicId, changeType, supply, divisibility);\n        var account = AssetsUtils.getSenderAccount(selectedAddress, walletPassword);\n        var multisSigAccount = _state_walletState__WEBPACK_IMPORTED_MODULE_1__[\"walletState\"].currentLoggedInWallet.accounts.find(function (element) { return element.address === multiSigAddress; });\n        var multisSigOther = _state_walletState__WEBPACK_IMPORTED_MODULE_1__[\"walletState\"].currentLoggedInWallet.others.find(function (element) { return element.address === multiSigAddress; });\n        var multisigPublicKey = multisSigAccount ? multisSigAccount.publicKey : multisSigOther.publicKey;\n        var multisigPublicAccount = tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_0__[\"PublicAccount\"].createFromPublicKey(multisigPublicKey, networkType);\n        var innerTxn = [createAssetAggregateTransaction.toAggregate(multisigPublicAccount)];\n        var aggregateBondedTx = buildTransactions.aggregateBonded(innerTxn);\n        var aggregateBondedTxSigned = account.sign(aggregateBondedTx, generationHash);\n        var hashLockTx = buildTransactions.hashLock(_typeHelper__WEBPACK_IMPORTED_MODULE_9__[\"Helper\"].createAsset(_state_networkState__WEBPACK_IMPORTED_MODULE_2__[\"networkState\"].currentNetworkProfile.network.currency.assetId, 10000000), _typeHelper__WEBPACK_IMPORTED_MODULE_9__[\"Helper\"].createUint64FromNumber(200), aggregateBondedTxSigned);\n        var signedHashlock = account.sign(hashLockTx, generationHash);\n        AssetsUtils.multiSigAnnouce(aggregateBondedTxSigned, signedHashlock);\n    };\n    AssetsUtils.linkedNamespaceToAsset = function (selectedAddress, walletPassword, networkType, generationHash, mosaicIdString, namespaceString, linkType) {\n        var linkAssetToNamespaceTx = AssetsUtils.linkAssetToNamespaceTransaction(networkType, generationHash, mosaicIdString, namespaceString, linkType);\n        var account = AssetsUtils.getSenderAccount(selectedAddress, walletPassword);\n        var signedTx = account.sign(linkAssetToNamespaceTx, _state_networkState__WEBPACK_IMPORTED_MODULE_2__[\"networkState\"].currentNetworkProfile.generationHash);\n        AssetsUtils.annouce(signedTx);\n    };\n    AssetsUtils.linkedNamespaceToAssetMultiSig = function (selectedAddress, walletPassword, networkType, generationHash, mosaicIdString, namespaceString, linkType, multiSigAddress) {\n        var buildTransactions = new _util_buildTransactions__WEBPACK_IMPORTED_MODULE_6__[\"BuildTransactions\"](networkType, generationHash);\n        var linkAssetToNamespaceTx = AssetsUtils.linkAssetToNamespaceTransaction(networkType, generationHash, mosaicIdString, namespaceString, linkType);\n        var account = AssetsUtils.getSenderAccount(selectedAddress, walletPassword);\n        var multisSigAccount = _state_walletState__WEBPACK_IMPORTED_MODULE_1__[\"walletState\"].currentLoggedInWallet.accounts.find(function (element) { return element.address === multiSigAddress; });\n        var multisSigOther = _state_walletState__WEBPACK_IMPORTED_MODULE_1__[\"walletState\"].currentLoggedInWallet.others.find(function (element) { return element.address === multiSigAddress; });\n        var multisigPublicKey = multisSigAccount ? multisSigAccount.publicKey : multisSigOther.publicKey;\n        var multisigPublicAccount = tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_0__[\"PublicAccount\"].createFromPublicKey(multisigPublicKey, networkType);\n        var innerTxn = [linkAssetToNamespaceTx.toAggregate(multisigPublicAccount)];\n        var aggregateBondedTx = buildTransactions.aggregateBonded(innerTxn);\n        var aggregateBondedTxSigned = account.sign(aggregateBondedTx, generationHash);\n        var hashLockTx = buildTransactions.hashLock(_typeHelper__WEBPACK_IMPORTED_MODULE_9__[\"Helper\"].createAsset(_state_networkState__WEBPACK_IMPORTED_MODULE_2__[\"networkState\"].currentNetworkProfile.network.currency.assetId, 10000000), _typeHelper__WEBPACK_IMPORTED_MODULE_9__[\"Helper\"].createUint64FromNumber(200), aggregateBondedTxSigned);\n        var signedHashlock = account.sign(hashLockTx, generationHash);\n        AssetsUtils.multiSigAnnouce(aggregateBondedTxSigned, signedHashlock);\n    };\n    AssetsUtils.listActiveNamespacesToLink = function (assetId, address, linkOption) {\n        // const accountNamespaces = walletState.currentLoggedInWallet.accounts.find((account) => account.address === address).namespaces.filter(namespace => namespace.active === true);\n        var account = _state_walletState__WEBPACK_IMPORTED_MODULE_1__[\"walletState\"].currentLoggedInWallet.accounts.find(function (account) { return account.address === address; });\n        var accountNamespaces = account ? account.namespaces.filter(function (namespace) { return namespace.active === true; }) : [];\n        var other = _state_walletState__WEBPACK_IMPORTED_MODULE_1__[\"walletState\"].currentLoggedInWallet.others.find(function (account) { return account.address === address; });\n        var otherNamespaces = other ? other.namespaces.filter(function (namespace) { return namespace.active === true; }) : [];\n        var namespacesNum;\n        var fetchedNamespace;\n        if (accountNamespaces.length > 0) {\n            namespacesNum = accountNamespaces.length;\n            fetchedNamespace = accountNamespaces;\n        }\n        else {\n            namespacesNum = otherNamespaces.length;\n            fetchedNamespace = otherNamespaces;\n        }\n        var namespacesArr = [];\n        if (namespacesNum > 0) {\n            fetchedNamespace.forEach(function (namespaceElement) {\n                console.log(namespaceElement);\n                var level = namespaceElement.name.split('.');\n                var isDisabled;\n                var label = '';\n                var namespaceName = '';\n                if (namespaceElement.linkedId != '') {\n                    var linkName = void 0;\n                    var linkLabel = void 0;\n                    switch (namespaceElement.linkType) {\n                        case 1:\n                            linkName = \"Asset\";\n                            linkLabel = namespaceElement.linkedId;\n                            isDisabled = (linkOption == 'link' ? true : false);\n                            break;\n                        case 2:\n                            linkName = \"Address\";\n                            linkLabel = _typeHelper__WEBPACK_IMPORTED_MODULE_9__[\"Helper\"].createAddress(namespaceElement.linkedId).pretty();\n                            isDisabled = true;\n                            break;\n                        default:\n                            break;\n                    }\n                    label = namespaceElement.name + ' (Linked to ' + linkName + ') - ' + linkLabel;\n                    namespaceName = namespaceElement.name;\n                }\n                else {\n                    isDisabled = (linkOption == 'link' ? false : true);\n                    label = namespaceElement.name;\n                    namespaceName = namespaceElement.name;\n                }\n                if (linkOption == 'link') {\n                    namespacesArr.push({\n                        // value: namespaceElement.idHex,\n                        value: namespaceName,\n                        label: label,\n                        disabled: isDisabled,\n                        level: level\n                    });\n                }\n                if (linkOption == 'unlink' && namespaceElement.linkedId == assetId) {\n                    namespacesArr.push({\n                        // value: namespaceElement.idHex,\n                        value: namespaceName,\n                        label: label,\n                        disabled: isDisabled,\n                        level: level\n                    });\n                }\n            });\n            namespacesArr.sort(function (a, b) {\n                if (a.label > b.label)\n                    return 1;\n                if (a.label < b.label)\n                    return -1;\n                return 0;\n            });\n            namespacesArr.sort(function (a, b) {\n                if (a.level > b.level)\n                    return 1;\n                if (a.level < b.level)\n                    return -1;\n                return 0;\n            });\n        }\n        return namespacesArr;\n    };\n    AssetsUtils.annouce = function (signedTransaction) {\n        var apiEndpoint = _util_chainUtils__WEBPACK_IMPORTED_MODULE_3__[\"ChainUtils\"].buildAPIEndpoint(_state_networkState__WEBPACK_IMPORTED_MODULE_2__[\"networkState\"].selectedAPIEndpoint, _state_networkState__WEBPACK_IMPORTED_MODULE_2__[\"networkState\"].currentNetworkProfile.httpPort);\n        var chainAPICall = new _models_REST_chainAPICall__WEBPACK_IMPORTED_MODULE_5__[\"ChainAPICall\"](apiEndpoint);\n        chainAPICall.transactionAPI.announce(signedTransaction);\n    };\n    AssetsUtils.multiSigAnnouce = function (aggregateTx, hashSigned) {\n        var hashLockAutoAnnounceSignedTx = new _state_listenerState__WEBPACK_IMPORTED_MODULE_7__[\"AutoAnnounceSignedTransaction\"](hashSigned);\n        hashLockAutoAnnounceSignedTx.announceAtBlock = _state_listenerState__WEBPACK_IMPORTED_MODULE_7__[\"listenerState\"].currentBlock + 1;\n        var autoAnnounceSignedTx = new _state_listenerState__WEBPACK_IMPORTED_MODULE_7__[\"AutoAnnounceSignedTransaction\"](aggregateTx);\n        autoAnnounceSignedTx.hashAnnounceBlock = new _state_listenerState__WEBPACK_IMPORTED_MODULE_7__[\"HashAnnounceBlock\"](hashSigned.hash);\n        autoAnnounceSignedTx.hashAnnounceBlock.annouceAfterBlockNum = 1;\n        autoAnnounceSignedTx.type = _state_listenerState__WEBPACK_IMPORTED_MODULE_7__[\"AnnounceType\"].BONDED;\n        _state_utils_listenerStateUtils__WEBPACK_IMPORTED_MODULE_8__[\"ListenerStateUtils\"].addAutoAnnounceSignedTransaction(hashLockAutoAnnounceSignedTx);\n        _state_utils_listenerStateUtils__WEBPACK_IMPORTED_MODULE_8__[\"ListenerStateUtils\"].addAutoAnnounceSignedTransaction(autoAnnounceSignedTx);\n    };\n    return AssetsUtils;\n}());\n\n\n\n//# sourceURL=webpack:///./src/util/assetsUtils.ts?");

/***/ }),

/***/ "./src/util/buildTransactions.ts":
/*!***************************************!*\
  !*** ./src/util/buildTransactions.ts ***!
  \***************************************/
/*! exports provided: BuildTransactions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BuildTransactions\", function() { return BuildTransactions; });\n/* harmony import */ var tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tsjs-xpx-chain-sdk */ \"./node_modules/tsjs-xpx-chain-sdk/dist/index.js\");\n/* harmony import */ var tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _typeHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./typeHelper */ \"./src/util/typeHelper.ts\");\n\n\nvar BuildTransactions = /** @class */ (function () {\n    function BuildTransactions(networkType, generationHash, feeStrategy) {\n        this.transactionBuilderFactory = new tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_0__[\"TransactionBuilderFactory\"]();\n        if (feeStrategy)\n            this.transactionBuilderFactory.feeCalculationStrategy = feeStrategy;\n        this.transactionBuilderFactory.networkType = networkType;\n        this.transactionBuilderFactory.generationHash = generationHash ? generationHash : \"\";\n    }\n    BuildTransactions.prototype.updateCustomFee = function (feePerByte) {\n        this.transactionBuilderFactory.feeCalculationStrategy = feePerByte;\n    };\n    BuildTransactions.prototype.updateGenerationHash = function (generationHash) {\n        this.transactionBuilderFactory.generationHash = generationHash;\n    };\n    BuildTransactions.prototype.transfer = function (recipient, message, sendingMosaics) {\n        var mosaics = [];\n        if (sendingMosaics) {\n            if (sendingMosaics.length)\n                mosaics = sendingMosaics;\n        }\n        if (!message) {\n            message = tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_0__[\"EmptyMessage\"];\n        }\n        return this.transactionBuilderFactory.transfer()\n            .deadline(tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_0__[\"Deadline\"].create())\n            .recipient(recipient)\n            .mosaics(mosaics)\n            .message(message)\n            .build();\n    };\n    BuildTransactions.prototype.transferBuilder = function () {\n        return this.transactionBuilderFactory.transfer();\n    };\n    /**\n     *\n     * @param {NetworkType} network\n     * @param {MosaicId} mosaicId\n     * @param {MosaicSupplyType} mosaicSupplyType\n     * @param {UInt64} delta\n     * @returns {MosaicSupplyChangeTransaction}\n  \n     */\n    BuildTransactions.prototype.buildMosaicSupplyChange = function (mosaicId, mosaicSupplyType, delta) {\n        return this.transactionBuilderFactory.mosaicSupplyChange()\n            .deadline(tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_0__[\"Deadline\"].create())\n            .mosaicId(mosaicId)\n            .direction(mosaicSupplyType)\n            .delta(delta)\n            .build();\n    };\n    BuildTransactions.prototype.buildMosaicSupplyChangeBuilder = function () {\n        return this.transactionBuilderFactory.mosaicSupplyChange();\n    };\n    BuildTransactions.prototype.mosaicDefinition = function (owner, supplyMutable, transferable, divisibility, duration) {\n        var nonce = _typeHelper__WEBPACK_IMPORTED_MODULE_1__[\"Helper\"].createNonceRandom();\n        return this.transactionBuilderFactory.mosaicDefinition()\n            .deadline(tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_0__[\"Deadline\"].create())\n            .mosaicNonce(nonce)\n            .mosaicId(tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_0__[\"MosaicId\"].createFromNonce(nonce, owner))\n            .mosaicProperties(tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_0__[\"MosaicProperties\"].create({\n            supplyMutable: supplyMutable,\n            transferable: transferable,\n            divisibility: divisibility,\n            duration: (duration) ? duration : undefined\n        }))\n            .build();\n    };\n    BuildTransactions.prototype.mosaicDefinitionBuilder = function () {\n        return this.transactionBuilderFactory.mosaicDefinition();\n    };\n    BuildTransactions.prototype.aggregateBonded = function (innerTxn) {\n        return this.transactionBuilderFactory.aggregateBonded()\n            .deadline(tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_0__[\"Deadline\"].create())\n            .innerTransactions(innerTxn)\n            .build();\n    };\n    BuildTransactions.prototype.aggregateBondedBuilder = function () {\n        return this.transactionBuilderFactory.aggregateBonded();\n    };\n    BuildTransactions.prototype.aggregateComplete = function (innerTxn) {\n        return this.transactionBuilderFactory.aggregateComplete()\n            .deadline(tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_0__[\"Deadline\"].create())\n            .innerTransactions(innerTxn)\n            .build();\n    };\n    BuildTransactions.prototype.aggregateCompleteBuilder = function () {\n        return this.transactionBuilderFactory.aggregateComplete();\n    };\n    BuildTransactions.prototype.hashLock = function (mosaic, duration, signedTransaction) {\n        return this.transactionBuilderFactory.hashLock()\n            .deadline(tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_0__[\"Deadline\"].create())\n            .duration(duration)\n            .mosaic(mosaic)\n            .signedTransaction(signedTransaction)\n            .build();\n    };\n    BuildTransactions.prototype.hashLockBuilder = function () {\n        return this.transactionBuilderFactory.hashLock();\n    };\n    BuildTransactions.prototype.modifyMultisigAccount = function (minApprovalDelta, minRemovalDelta, modifications) {\n        return this.transactionBuilderFactory.modifyMultisig()\n            .deadline(tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_0__[\"Deadline\"].create())\n            .minApprovalDelta(minApprovalDelta)\n            .minRemovalDelta(minRemovalDelta)\n            .modifications(modifications)\n            .build();\n    };\n    BuildTransactions.prototype.modifyMultisigAccountBuilder = function () {\n        return this.transactionBuilderFactory.modifyMultisig();\n    };\n    BuildTransactions.prototype.addressAlias = function (aliasActionType, namespaceId, address) {\n        return this.transactionBuilderFactory.addressAlias()\n            .deadline(tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_0__[\"Deadline\"].create())\n            .actionType(aliasActionType)\n            .address(address)\n            .namespaceId(namespaceId)\n            .build();\n    };\n    BuildTransactions.prototype.addressAliasBuilder = function () {\n        return this.transactionBuilderFactory.addressAlias();\n    };\n    BuildTransactions.prototype.accountLink = function (remoteAccountKey, linkAction) {\n        return this.transactionBuilderFactory.accountLink()\n            .deadline(tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_0__[\"Deadline\"].create())\n            .linkAction(linkAction)\n            .remoteAccountKey(remoteAccountKey)\n            .build();\n    };\n    BuildTransactions.prototype.accountLinkBuilder = function () {\n        return this.transactionBuilderFactory.accountLink();\n    };\n    BuildTransactions.prototype.assetAlias = function (aliasActionType, namespaceId, mosaicId) {\n        return this.transactionBuilderFactory.mosaicAlias()\n            .deadline(tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_0__[\"Deadline\"].create())\n            .actionType(aliasActionType)\n            .namespaceId(namespaceId)\n            .mosaicId(mosaicId)\n            .build();\n    };\n    BuildTransactions.prototype.assetAliasBuilder = function () {\n        return this.transactionBuilderFactory.mosaicAlias();\n    };\n    BuildTransactions.prototype.mosaicSupplyChange = function (mosaicId, supply, mosaicSupplyType) {\n        return this.transactionBuilderFactory.mosaicSupplyChange()\n            .deadline(tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_0__[\"Deadline\"].create())\n            .mosaicId(new tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_0__[\"MosaicId\"](mosaicId))\n            .direction(mosaicSupplyType)\n            .delta(tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_0__[\"UInt64\"].fromUint(supply))\n            .build();\n    };\n    BuildTransactions.prototype.mosaicSupplyChangeBuilder = function () {\n        return this.transactionBuilderFactory.mosaicSupplyChange();\n    };\n    BuildTransactions.prototype.registerRootNamespace = function (name, duration) {\n        if (duration === void 0) { duration = tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_0__[\"UInt64\"].fromUint(100); }\n        return this.transactionBuilderFactory.registerRootNamespace()\n            .deadline(tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_0__[\"Deadline\"].create())\n            .namespaceName(name)\n            .duration(duration)\n            .build();\n    };\n    BuildTransactions.prototype.registerRootNamespaceBuilder = function () {\n        return this.transactionBuilderFactory.registerRootNamespace();\n    };\n    BuildTransactions.prototype.registersubNamespace = function (rootNamespace, subnamespaceName) {\n        return this.transactionBuilderFactory.registerSubNamespace()\n            .deadline(tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_0__[\"Deadline\"].create())\n            .namespaceName(subnamespaceName)\n            .parentNamespace(rootNamespace)\n            .build();\n    };\n    BuildTransactions.prototype.registersubNamespaceBuilder = function () {\n        return this.transactionBuilderFactory.registerSubNamespace();\n    };\n    BuildTransactions.prototype.getFeeStrategy = function () {\n        return this.transactionBuilderFactory.feeCalculationStrategy;\n    };\n    BuildTransactions.prototype.setFeeStrategy = function (feeStrategy) {\n        this.transactionBuilderFactory.feeCalculationStrategy = feeStrategy;\n    };\n    return BuildTransactions;\n}());\n\n\n\n//# sourceURL=webpack:///./src/util/buildTransactions.ts?");

/***/ })

}]);