(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[12],{

/***/ "./src/util/namespaceUtils.ts":
/*!************************************!*\
  !*** ./src/util/namespaceUtils.ts ***!
  \************************************/
/*! exports provided: NamespaceUtils */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NamespaceUtils\", function() { return NamespaceUtils; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tsjs-xpx-chain-sdk */ \"./node_modules/tsjs-xpx-chain-sdk/dist/index.js\");\n/* harmony import */ var tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _state_walletState__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../state/walletState */ \"./src/state/walletState.ts\");\n/* harmony import */ var _state_networkState__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../state/networkState */ \"./src/state/networkState.ts\");\n/* harmony import */ var _util_chainUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/chainUtils */ \"./src/util/chainUtils.ts\");\n/* harmony import */ var _util_walletUtils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/walletUtils */ \"./src/util/walletUtils.ts\");\n/* harmony import */ var _models_REST_chainAPICall__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../models/REST/chainAPICall */ \"./src/models/REST/chainAPICall.ts\");\n/* harmony import */ var _util_buildTransactions__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util/buildTransactions */ \"./src/util/buildTransactions.ts\");\n/* harmony import */ var _typeHelper__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./typeHelper */ \"./src/util/typeHelper.ts\");\n/* harmony import */ var _state_listenerState__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @/state/listenerState */ \"./src/state/listenerState.ts\");\n/* harmony import */ var _state_utils_listenerStateUtils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @/state/utils/listenerStateUtils */ \"./src/state/utils/listenerStateUtils.ts\");\n/* harmony import */ var _models_stores_chainProfileConfig__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @/models/stores/chainProfileConfig */ \"./src/models/stores/chainProfileConfig.ts\");\n\n\n// import { mergeMap, timeout, filter, map, first, skip } from 'rxjs/operators';\n\n\n\n\n\n\n\n\n\n\nvar NamespaceUtils = /** @class */ (function () {\n    function NamespaceUtils() {\n    }\n    NamespaceUtils.getLinkedMosaic = function (namespaceId, endpoint) {\n        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__awaiter\"])(this, void 0, Promise, function () {\n            var rest, mosaicId;\n            return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__generator\"])(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        rest = new _models_REST_chainAPICall__WEBPACK_IMPORTED_MODULE_6__[\"ChainAPICall\"](endpoint);\n                        return [4 /*yield*/, rest.namespaceAPI.getLinkedMosaicId(namespaceId)];\n                    case 1:\n                        mosaicId = _a.sent();\n                        return [2 /*return*/, mosaicId];\n                }\n            });\n        });\n    };\n    NamespaceUtils.getLinkedAddress = function (namespaceId, endpoint) {\n        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__awaiter\"])(this, void 0, Promise, function () {\n            var rest, address;\n            return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__generator\"])(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        rest = new _models_REST_chainAPICall__WEBPACK_IMPORTED_MODULE_6__[\"ChainAPICall\"](endpoint);\n                        return [4 /*yield*/, rest.namespaceAPI.getLinkedAddress(namespaceId)];\n                    case 1:\n                        address = _a.sent();\n                        return [2 /*return*/, address];\n                }\n            });\n        });\n    };\n    NamespaceUtils.getCosignerList = function (address) {\n        var account = _state_walletState__WEBPACK_IMPORTED_MODULE_2__[\"walletState\"].currentLoggedInWallet.accounts.find(function (account) { return account.address == address; });\n        var other = _state_walletState__WEBPACK_IMPORTED_MODULE_2__[\"walletState\"].currentLoggedInWallet.others.find(function (account) { return account.address == address; });\n        var multiSig = account ? account.getDirectParentMultisig() : [];\n        var multiSigOther = other ? other.getDirectParentMultisig() : [];\n        if (multiSig.length > 0 || multiSigOther.length > 0) {\n            var cosigner = _state_walletState__WEBPACK_IMPORTED_MODULE_2__[\"walletState\"].currentLoggedInWallet.accounts.filter(function (account) {\n                if (multiSig.indexOf(account.publicKey) >= 0 || multiSigOther.indexOf(account.publicKey) >= 0) {\n                    return true;\n                }\n            });\n            var cosignList_1 = [];\n            if (cosigner.length > 0) {\n                cosigner.forEach(function (cosign) {\n                    cosignList_1.push({\n                        name: cosign.name,\n                        address: cosign.address,\n                        balance: cosign.balance,\n                    });\n                });\n            }\n            return { list: cosignList_1 };\n        }\n        else {\n            return { list: [] };\n        }\n    };\n    NamespaceUtils.rootNamespaceTransaction = function (networkType, generationHash, namespaceName, duration) {\n        var buildTransactions = new _util_buildTransactions__WEBPACK_IMPORTED_MODULE_7__[\"BuildTransactions\"](networkType, generationHash);\n        return buildTransactions.registerRootNamespace(namespaceName, tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_1__[\"UInt64\"].fromUint(NamespaceUtils.calculateDuration(duration)));\n    };\n    NamespaceUtils.subNamespaceTransaction = function (networkType, generationHash, rootNamespace, subNamespace) {\n        var buildTransactions = new _util_buildTransactions__WEBPACK_IMPORTED_MODULE_7__[\"BuildTransactions\"](networkType, generationHash);\n        return buildTransactions.registersubNamespace(rootNamespace, subNamespace);\n    };\n    NamespaceUtils.getRootNamespaceTransactionFee = function (networkType, generationHash, namespaceName, duration) {\n        var registerRootNamespaceTransaction = NamespaceUtils.rootNamespaceTransaction(networkType, generationHash, namespaceName, duration);\n        return registerRootNamespaceTransaction.maxFee.compact();\n    };\n    NamespaceUtils.getSubNamespaceTransactionFee = function (networkType, generationHash, subNamespace, rootNamespace) {\n        var registerSubNamespaceTransaction = NamespaceUtils.subNamespaceTransaction(networkType, generationHash, rootNamespace, subNamespace);\n        return registerSubNamespaceTransaction.maxFee.compact();\n    };\n    NamespaceUtils.calculateDuration = function (durationInDay) {\n        var chainConfig = new _models_stores_chainProfileConfig__WEBPACK_IMPORTED_MODULE_11__[\"ChainProfileConfig\"](_state_networkState__WEBPACK_IMPORTED_MODULE_3__[\"networkState\"].chainNetworkName);\n        chainConfig.init();\n        var blockTargetTime = parseInt(chainConfig.blockGenerationTargetTime);\n        var blockTargetTimeByDay = (60 * 60 * 24) / blockTargetTime;\n        // 5760 = 4 * 60 * 24 -> 15sec per block\n        return Math.floor(durationInDay * blockTargetTimeByDay);\n    };\n    NamespaceUtils.listNamespaces = function (address) {\n        var account = _state_walletState__WEBPACK_IMPORTED_MODULE_2__[\"walletState\"].currentLoggedInWallet.accounts.find(function (account) { return account.address === address; });\n        var accountNamespaces = account ? account.namespaces.filter(function (namespace) { return namespace.active === true; }) : [];\n        var other = _state_walletState__WEBPACK_IMPORTED_MODULE_2__[\"walletState\"].currentLoggedInWallet.others.find(function (account) { return account.address === address; });\n        var otherNamespaces = other ? other.namespaces.filter(function (namespace) { return namespace.active === true; }) : [];\n        var accountNamespacesNum = accountNamespaces.length;\n        var otherNamespacesNum = otherNamespaces.length;\n        var namespacesArr = [];\n        if ((accountNamespacesNum + otherNamespacesNum) > 0) {\n            if (accountNamespacesNum > 0) {\n                accountNamespaces.forEach(function (namespaceElement) {\n                    var level = namespaceElement.name.split('.');\n                    var isDisabled;\n                    if (level.length > 2) {\n                        isDisabled = true;\n                    }\n                    else {\n                        isDisabled = false;\n                    }\n                    namespacesArr.push({\n                        value: namespaceElement.name,\n                        label: namespaceElement.name,\n                        disabled: isDisabled,\n                        level: level\n                    });\n                });\n            }\n            if (otherNamespacesNum > 0) {\n                otherNamespaces.forEach(function (namespaceElement) {\n                    var level = namespaceElement.name.split('.');\n                    var isDisabled;\n                    if (level.length > 2) {\n                        isDisabled = true;\n                    }\n                    else {\n                        isDisabled = false;\n                    }\n                    namespacesArr.push({\n                        value: namespaceElement.name,\n                        label: namespaceElement.name,\n                        disabled: isDisabled,\n                        level: level\n                    });\n                });\n            }\n            namespacesArr.sort(function (a, b) {\n                if (a.label > b.label)\n                    return 1;\n                if (a.label < b.label)\n                    return -1;\n                return 0;\n            });\n            namespacesArr.sort(function (a, b) {\n                if (a.level > b.level)\n                    return 1;\n                if (a.level < b.level)\n                    return -1;\n                return 0;\n            });\n        }\n        return namespacesArr;\n    };\n    NamespaceUtils.listRootNamespaces = function (address) {\n        var account = _state_walletState__WEBPACK_IMPORTED_MODULE_2__[\"walletState\"].currentLoggedInWallet.accounts.find(function (account) { return account.address === address; });\n        var accountNamespaces = account ? account.namespaces.filter(function (namespace) { return namespace.active === true; }) : [];\n        var other = _state_walletState__WEBPACK_IMPORTED_MODULE_2__[\"walletState\"].currentLoggedInWallet.others.find(function (account) { return account.address === address; });\n        var otherNamespaces = other ? other.namespaces.filter(function (namespace) { return namespace.active === true; }) : [];\n        var accountNamespacesNum = accountNamespaces.length;\n        var otherNamespacesNum = otherNamespaces.length;\n        var namespacesArr = [];\n        if ((accountNamespacesNum + otherNamespacesNum) > 0) {\n            if (accountNamespacesNum > 0) {\n                accountNamespaces.forEach(function (namespaceElement) {\n                    var level = namespaceElement.name.split('.');\n                    var isDisabled = false;\n                    if (level.length == 1) {\n                        namespacesArr.push({\n                            value: namespaceElement.name,\n                            label: namespaceElement.name,\n                            disabled: isDisabled,\n                            level: level\n                        });\n                    }\n                });\n            }\n            if (otherNamespacesNum > 0) {\n                otherNamespaces.forEach(function (namespaceElement) {\n                    var level = namespaceElement.name.split('.');\n                    var isDisabled = false;\n                    if (level.length == 1) {\n                        namespacesArr.push({\n                            value: namespaceElement.name,\n                            label: namespaceElement.name,\n                            disabled: isDisabled,\n                            level: level\n                        });\n                    }\n                });\n            }\n            namespacesArr.sort(function (a, b) {\n                if (a.label > b.label)\n                    return 1;\n                if (a.label < b.label)\n                    return -1;\n                return 0;\n            });\n        }\n        return namespacesArr;\n    };\n    NamespaceUtils.getSenderAccount = function (selectedAddress, walletPassword) {\n        var accAddress = tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_1__[\"Address\"].createFromRawAddress(selectedAddress);\n        var accountDetails = _state_walletState__WEBPACK_IMPORTED_MODULE_2__[\"walletState\"].currentLoggedInWallet.accounts.find(function (account) { return account.address == accAddress.plain(); });\n        var encryptedPassword = _util_walletUtils__WEBPACK_IMPORTED_MODULE_5__[\"WalletUtils\"].createPassword(walletPassword);\n        var privateKey = _util_walletUtils__WEBPACK_IMPORTED_MODULE_5__[\"WalletUtils\"].decryptPrivateKey(encryptedPassword, accountDetails.encrypted, accountDetails.iv);\n        var account = tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_1__[\"Account\"].createFromPrivateKey(privateKey, _util_chainUtils__WEBPACK_IMPORTED_MODULE_4__[\"ChainUtils\"].getNetworkType(_state_networkState__WEBPACK_IMPORTED_MODULE_3__[\"networkState\"].currentNetworkProfile.network.type));\n        return account;\n    };\n    NamespaceUtils.createRootNamespace = function (selectedAddress, walletPassword, networkType, generationHash, namespaceName, duration) {\n        var registerRootNamespaceTransaction = NamespaceUtils.rootNamespaceTransaction(networkType, generationHash, namespaceName, duration);\n        var account = NamespaceUtils.getSenderAccount(selectedAddress, walletPassword);\n        var signedTx = account.sign(registerRootNamespaceTransaction, _state_networkState__WEBPACK_IMPORTED_MODULE_3__[\"networkState\"].currentNetworkProfile.generationHash);\n        NamespaceUtils.annouce(signedTx);\n        return signedTx.hash;\n    };\n    NamespaceUtils.createSubNamespace = function (selectedAddress, walletPassword, networkType, generationHash, subNamespace, rootNamespace) {\n        var registerSubNamespaceTransaction = NamespaceUtils.subNamespaceTransaction(networkType, generationHash, rootNamespace, subNamespace);\n        var account = NamespaceUtils.getSenderAccount(selectedAddress, walletPassword);\n        var signedTx = account.sign(registerSubNamespaceTransaction, _state_networkState__WEBPACK_IMPORTED_MODULE_3__[\"networkState\"].currentNetworkProfile.generationHash);\n        NamespaceUtils.annouce(signedTx);\n    };\n    NamespaceUtils.createRootNamespaceMultisig = function (selectedAddress, walletPassword, networkType, generationHash, namespaceName, duration, multiSigAddress) {\n        var buildTransactions = new _util_buildTransactions__WEBPACK_IMPORTED_MODULE_7__[\"BuildTransactions\"](networkType, generationHash);\n        var registerRootNamespaceTransaction = NamespaceUtils.rootNamespaceTransaction(networkType, generationHash, namespaceName, duration);\n        var account = NamespaceUtils.getSenderAccount(selectedAddress, walletPassword);\n        var multisSigAccount = _state_walletState__WEBPACK_IMPORTED_MODULE_2__[\"walletState\"].currentLoggedInWallet.accounts.find(function (element) { return element.address === multiSigAddress; });\n        var multisSigOther = _state_walletState__WEBPACK_IMPORTED_MODULE_2__[\"walletState\"].currentLoggedInWallet.others.find(function (element) { return element.address === multiSigAddress; });\n        var multisigPublicKey = multisSigAccount ? multisSigAccount.publicKey : multisSigOther.publicKey;\n        var multisigPublicAccount = tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_1__[\"PublicAccount\"].createFromPublicKey(multisigPublicKey, networkType);\n        var innerTxn = [registerRootNamespaceTransaction.toAggregate(multisigPublicAccount)];\n        var aggregateBondedTx = buildTransactions.aggregateBonded(innerTxn);\n        var aggregateBondedTxSigned = account.sign(aggregateBondedTx, generationHash);\n        var hashLockTx = buildTransactions.hashLock(_typeHelper__WEBPACK_IMPORTED_MODULE_8__[\"Helper\"].createAsset(_state_networkState__WEBPACK_IMPORTED_MODULE_3__[\"networkState\"].currentNetworkProfile.network.currency.assetId, 10000000), _typeHelper__WEBPACK_IMPORTED_MODULE_8__[\"Helper\"].createUint64FromNumber(200), aggregateBondedTxSigned);\n        var signedHashlock = account.sign(hashLockTx, generationHash);\n        NamespaceUtils.multiSigAnnouce(aggregateBondedTxSigned, signedHashlock);\n    };\n    NamespaceUtils.createSubNamespaceMultisig = function (selectedAddress, walletPassword, networkType, generationHash, subNamespace, rootNamespace, multiSigAddress) {\n        var buildTransactions = new _util_buildTransactions__WEBPACK_IMPORTED_MODULE_7__[\"BuildTransactions\"](networkType, generationHash);\n        var registerSubNamespaceTransaction = NamespaceUtils.subNamespaceTransaction(networkType, generationHash, rootNamespace, subNamespace);\n        var account = NamespaceUtils.getSenderAccount(selectedAddress, walletPassword);\n        var multisSigAccount = _state_walletState__WEBPACK_IMPORTED_MODULE_2__[\"walletState\"].currentLoggedInWallet.accounts.find(function (element) { return element.address === multiSigAddress; });\n        var multisSigOther = _state_walletState__WEBPACK_IMPORTED_MODULE_2__[\"walletState\"].currentLoggedInWallet.others.find(function (element) { return element.address === multiSigAddress; });\n        var multisigPublicKey = multisSigAccount ? multisSigAccount.publicKey : multisSigOther.publicKey;\n        var multisigPublicAccount = tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_1__[\"PublicAccount\"].createFromPublicKey(multisigPublicKey, networkType);\n        var innerTxn = [registerSubNamespaceTransaction.toAggregate(multisigPublicAccount)];\n        var aggregateBondedTx = buildTransactions.aggregateBonded(innerTxn);\n        var aggregateBondedTxSigned = account.sign(aggregateBondedTx, generationHash);\n        var hashLockTx = buildTransactions.hashLock(_typeHelper__WEBPACK_IMPORTED_MODULE_8__[\"Helper\"].createAsset(_state_networkState__WEBPACK_IMPORTED_MODULE_3__[\"networkState\"].currentNetworkProfile.network.currency.assetId, 10000000), _typeHelper__WEBPACK_IMPORTED_MODULE_8__[\"Helper\"].createUint64FromNumber(200), aggregateBondedTxSigned);\n        var signedHashlock = account.sign(hashLockTx, generationHash);\n        NamespaceUtils.multiSigAnnouce(aggregateBondedTxSigned, signedHashlock);\n    };\n    NamespaceUtils.extendNamespace = function (selectedAddress, walletPassword, networkType, generationHash, namespaceName, duration) {\n        var extendNamespaceTx = NamespaceUtils.rootNamespaceTransaction(networkType, generationHash, namespaceName, duration);\n        var account = NamespaceUtils.getSenderAccount(selectedAddress, walletPassword);\n        var signedTx = account.sign(extendNamespaceTx, _state_networkState__WEBPACK_IMPORTED_MODULE_3__[\"networkState\"].currentNetworkProfile.generationHash);\n        NamespaceUtils.annouce(signedTx);\n    };\n    NamespaceUtils.extendNamespaceMultisig = function (selectedAddress, walletPassword, networkType, generationHash, namespaceName, duration, multiSigAddress) {\n        var buildTransactions = new _util_buildTransactions__WEBPACK_IMPORTED_MODULE_7__[\"BuildTransactions\"](networkType, generationHash);\n        var extendNamespaceTx = NamespaceUtils.rootNamespaceTransaction(networkType, generationHash, namespaceName, duration);\n        var account = NamespaceUtils.getSenderAccount(selectedAddress, walletPassword);\n        var multisSigAccount = _state_walletState__WEBPACK_IMPORTED_MODULE_2__[\"walletState\"].currentLoggedInWallet.accounts.find(function (element) { return element.address === multiSigAddress; });\n        var multisSigOther = _state_walletState__WEBPACK_IMPORTED_MODULE_2__[\"walletState\"].currentLoggedInWallet.others.find(function (element) { return element.address === multiSigAddress; });\n        var multisigPublicKey = multisSigAccount ? multisSigAccount.publicKey : multisSigOther.publicKey;\n        var multisigPublicAccount = tsjs_xpx_chain_sdk__WEBPACK_IMPORTED_MODULE_1__[\"PublicAccount\"].createFromPublicKey(multisigPublicKey, networkType);\n        var innerTxn = [extendNamespaceTx.toAggregate(multisigPublicAccount)];\n        var aggregateBondedTx = buildTransactions.aggregateBonded(innerTxn);\n        var aggregateBondedTxSigned = account.sign(aggregateBondedTx, generationHash);\n        var hashLockTx = buildTransactions.hashLock(_typeHelper__WEBPACK_IMPORTED_MODULE_8__[\"Helper\"].createAsset(_state_networkState__WEBPACK_IMPORTED_MODULE_3__[\"networkState\"].currentNetworkProfile.network.currency.assetId, 10000000), _typeHelper__WEBPACK_IMPORTED_MODULE_8__[\"Helper\"].createUint64FromNumber(200), aggregateBondedTxSigned);\n        var signedHashlock = account.sign(hashLockTx, generationHash);\n        NamespaceUtils.multiSigAnnouce(aggregateBondedTxSigned, signedHashlock);\n    };\n    NamespaceUtils.annouce = function (signedTransaction) {\n        var apiEndpoint = _util_chainUtils__WEBPACK_IMPORTED_MODULE_4__[\"ChainUtils\"].buildAPIEndpoint(_state_networkState__WEBPACK_IMPORTED_MODULE_3__[\"networkState\"].selectedAPIEndpoint, _state_networkState__WEBPACK_IMPORTED_MODULE_3__[\"networkState\"].currentNetworkProfile.httpPort);\n        var chainAPICall = new _models_REST_chainAPICall__WEBPACK_IMPORTED_MODULE_6__[\"ChainAPICall\"](apiEndpoint);\n        chainAPICall.transactionAPI.announce(signedTransaction);\n    };\n    NamespaceUtils.multiSigAnnouce = function (aggregateTx, hashSigned) {\n        var hashLockAutoAnnounceSignedTx = new _state_listenerState__WEBPACK_IMPORTED_MODULE_9__[\"AutoAnnounceSignedTransaction\"](hashSigned);\n        hashLockAutoAnnounceSignedTx.announceAtBlock = _state_listenerState__WEBPACK_IMPORTED_MODULE_9__[\"listenerState\"].currentBlock + 1;\n        var autoAnnounceSignedTx = new _state_listenerState__WEBPACK_IMPORTED_MODULE_9__[\"AutoAnnounceSignedTransaction\"](aggregateTx);\n        autoAnnounceSignedTx.hashAnnounceBlock = new _state_listenerState__WEBPACK_IMPORTED_MODULE_9__[\"HashAnnounceBlock\"](hashSigned.hash);\n        autoAnnounceSignedTx.hashAnnounceBlock.annouceAfterBlockNum = 1;\n        autoAnnounceSignedTx.type = _state_listenerState__WEBPACK_IMPORTED_MODULE_9__[\"AnnounceType\"].BONDED;\n        _state_utils_listenerStateUtils__WEBPACK_IMPORTED_MODULE_10__[\"ListenerStateUtils\"].addAutoAnnounceSignedTransaction(hashLockAutoAnnounceSignedTx);\n        _state_utils_listenerStateUtils__WEBPACK_IMPORTED_MODULE_10__[\"ListenerStateUtils\"].addAutoAnnounceSignedTransaction(autoAnnounceSignedTx);\n    };\n    return NamespaceUtils;\n}());\n\n\n\n//# sourceURL=webpack:///./src/util/namespaceUtils.ts?");

/***/ })

}]);